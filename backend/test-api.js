async function testAPI() {
  try {
    // Sample articles data with correct category IDs
    const articles = [
      // Politics Articles (category_id: 1)
      {
        title:
          "ރައީސުލްޖުމްހޫރިއްޔާ ރައްޔިތުންގެ މަޖިލީހުގެ ފުރަތަމަ ދައުރުގެ ފުރަތަމަ ޖަލްސާ ފައްޓަވައިދެއްވައިފި",
        excerpt:
          "ރައީސުލްޖުމްހޫރިއްޔާ ޑރ. މުޙައްމަދު މުޢިއްޒު މިއަދު ރައްޔިތުންގެ މަޖިލީހުގެ 20 ވަނަ ދައުރުގެ ފުރަތަމަ ޖަލްސާ ފައްޓަވައިދެއްވައިފިއެވެ.",
        content:
          "ރައީސުލްޖުމްހޫރިއްޔާ ޑރ. މުޙައްމަދު މުޢިއްޒު މިއަދު ރައްޔިތުންގެ މަޖިލީހުގެ 20 ވަނަ ދައުރުގެ ފުރަތަމަ ޖަލްސާ ފައްޓަވައިދެއްވައިފިއެވެ. މި ޖަލްސާގައި ވާހަކަފުޅު ދައްކަވަމުން ރައީސުލްޖުމްހޫރިއްޔާ ވިދާޅުވީ، ސަރުކާރުގެ އަމާޒަކީ ރައްޔިތުންނަށް ފައިދާހުރި ކަންކަން ކުރުން ކަމަށެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?parliament",
        author: "އަޙްމަދު ޝަހީދު",
        category_id: 1,
      },
      {
        title: "އެމްޑީޕީގެ ޕާލިމެންޓަރީ ގްރޫޕްގެ ލީޑަރަކަށް އައު ބޭފުޅަކު",
        excerpt:
          "އެމްޑީޕީގެ ޕާލިމެންޓަރީ ގްރޫޕްގެ ލީޑަރުކަމަށް މަޖިލީހުގެ ތުލުސްދޫ ދާއިރާގެ މެންބަރު އިބްރާހިމް ނަސީރު ހޮވިވަޑައިގެންފިއެވެ.",
        content:
          "އެމްޑީޕީގެ ޕާލިމެންޓަރީ ގްރޫޕްގެ ލީޑަރުކަމަށް މަޖިލީހުގެ ތުލުސްދޫ ދާއިރާގެ މެންބަރު އިބްރާހިމް ނަސީރު ހޮވިވަޑައިގެންފިއެވެ. މިއަދު ބޭއްވުނު އެމްޑީޕީގެ ޕާލިމެންޓަރީ ގްރޫޕްގެ ބައްދަލުވުމުގައި ނެގުނު ވޯޓުން...",
        image_url: "https://source.unsplash.com/random/900×700/?politics",
        author: "މަރްޔަމް ޝާހިދާ",
        category_id: 1,
      },
      // Business Articles (category_id: 2)
      {
        title: "ބޭންކް އޮފް މޯލްޑިވްސްގެ ފައިދާ 39 އިންސައްތަ އިތުރުވެއްޖެ",
        excerpt:
          "ބޭންކް އޮފް މޯލްޑިވްސް (ބީއެމްއެލް) ގެ ސާފު ފައިދާ 2023 ވަނަ އަހަރު 39 އިންސައްތަ އިތުރުވެއްޖެއެވެ.",
        content:
          "ބޭންކް އޮފް މޯލްޑިވްސް (ބީއެމްއެލް) ގެ ސާފު ފައިދާ 2023 ވަނަ އަހަރު 39 އިންސައްތަ އިތުރުވެއްޖެއެވެ. މިއީ ބޭންކުގެ ތާރީޚުގައި އެންމެ ރަނގަޅު އަހަރު ކަމަށް ބޭންކުން ބުނެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?bank",
        author: "ޙުސައިން ރަޝީދު",
        category_id: 2,
      },
      {
        title: "ދިރާގުން 5ޖީ ޚިދުމަތް ފެށުމަށް ތައްޔާރުވަނީ",
        excerpt:
          "ދިވެހިރާއްޖޭގެ އެންމެ ބޮޑު ޓެލެކޮމް ކުންފުނި ދިރާގުން 5ޖީ ޚިދުމަތް ތަޢާރަފުކުރުމުގެ މަސައްކަތް ފަށައިފިއެވެ.",
        content:
          "ދިވެހިރާއްޖޭގެ އެންމެ ބޮޑު ޓެލެކޮމް ކުންފުނި ދިރާގުން 5ޖީ ޚިދުމަތް ތަޢާރަފުކުރުމުގެ މަސައްކަތް ފަށައިފިއެވެ. މި ޚިދުމަތް ފުރަތަމަ ފަށާނީ މާލެ ސަރަހައްދުގައި ކަމަށް ދިރާގުން ބުނެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?5g",
        author: "ފާތިމަތު ޝިފާ",
        category_id: 2,
      },
      // Sports Articles (category_id: 3)
      {
        title: "ދިވެހި ޤައުމީ ޓީމު ސާފް ޗެމްޕިއަންޝިޕްގެ ސެމީފައިނަލަށް ގޮސްފި",
        excerpt:
          "ދިވެހި ޤައުމީ ފުޓްބޯޅަ ޓީމު ސާފް ޗެމްޕިއަންޝިޕްގެ ސެމީފައިނަލަށް ދަތުރުކޮށްފިއެވެ.",
        content:
          "ދިވެހި ޤައުމީ ފުޓްބޯޅަ ޓީމު ސާފް ޗެމްޕިއަންޝިޕްގެ ސެމީފައިނަލަށް ދަތުރުކޮށްފިއެވެ. މިރޭ ކުޅުނު މެޗުގައި ބަންގްލަދޭޝް 2-1 އިން ބަލިކޮށް، ގްރޫޕް ސްޓޭޖުން ކުރިއަށް ދިޔުމުގެ ޖާގަ ހޯދައިފިއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?football",
        author: "އިބްރާހިމް ރިޟާ",
        category_id: 3,
      },
      {
        title: "ކްލަބް ވެލެންސިއާ އާއެކު އަލީ ފަސީލް ކޮންޓްރެކްޓް އައުކޮށްފި",
        excerpt:
          "ދިވެހި ޒުވާން ކުޅުންތެރިޔާ އަލީ ފަސީލް ސްޕެއިންގެ ކްލަބް ވެލެންސިއާ އާއެކު އައު އެއްބަސްވުމެއްގައި ސޮއިކޮށްފިއެވެ.",
        content:
          "ދިވެހި ޒުވާން ކުޅުންތެރިޔާ އަލީ ފަސީލް ސްޕެއިންގެ ކްލަބް ވެލެންސިއާ އާއެކު އައު އެއްބަސްވުމެއްގައި ސޮއިކޮށްފިއެވެ. މި އެއްބަސްވުމުގެ ދަށުން އޭނާ 2025 ވަނަ އަހަރުގެ ނިޔަލަށް ވެލެންސިއާގައި ކުޅޭނެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?soccer",
        author: "މުޙައްމަދު ޖިނާހު",
        category_id: 3,
      },
      // Technology Articles (category_id: 4)
      {
        title:
          "ދިވެހިރާއްޖޭގައި އާޓިފިޝަލް އިންޓެލިޖެންސް ބޭނުންކުރުން އިތުރުވަނީ",
        excerpt:
          "ދިވެހިރާއްޖޭގެ އެކި ދާއިރާތަކުގައި އާޓިފިޝަލް އިންޓެލިޖެންސް (އޭއައި) ބޭނުންކުރުން އިތުރުވަމުންދާ ކަމަށް ދިރާސާއަކުން ދައްކައިފިއެވެ.",
        content:
          "ދިވެހިރާއްޖޭގެ އެކި ދާއިރާތަކުގައި އާޓިފިޝަލް އިންޓެލިޖެންސް (އޭއައި) ބޭނުންކުރުން އިތުރުވަމުންދާ ކަމަށް ދިރާސާއަކުން ދައްކައިފިއެވެ. މިކަމުގެ ސަބަބުން ވަޒީފާގެ ބާޒާރަށް ބޮޑެތި ބަދަލުތަކެއް އަންނާނެ ކަމަށް ފާހަގަކުރެވެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?ai",
        author: "އާމިނަތު ނަޒްލާ",
        category_id: 4,
      },
      {
        title: "ސައިބަރ ސެކިއުރިޓީ ބިލު ފާސްވެއްޖެ",
        excerpt:
          "ރައްޔިތުންގެ މަޖިލީހުން ސައިބަރ ސެކިއުރިޓީ ބިލު ފާސްކޮށްފިއެވެ. މި ބިލަކީ ޑިޖިޓަލް ސަލާމަތާއި ރައްކާތެރިކަން ކަށަވަރުކުރުމަށް އެޅޭ މުހިންމު ފިޔަވަޅެކެވެ.",
        content:
          "ރައްޔިތުންގެ މަޖިލީހުން ސައިބަރ ސެކިއުރިޓީ ބިލު ފާސްކޮށްފިއެވެ. މި ބިލަކީ ޑިޖިޓަލް ސަލާމަތާއި ރައްކާތެރިކަން ކަށަވަރުކުރުމަށް އެޅޭ މުހިންމު ފިޔަވަޅެކެވެ. މި ބިލުގެ ސަބަބުން ސައިބަރ ކުށްތައް މަދުކުރުމަށް މަގުފަހިވާނެ ކަމަށް ބެލެވެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?cybersecurity",
        author: "ޢަލީ ޝަފީޤް",
        category_id: 4,
      },
      // Health Articles (category_id: 5)
      {
        title: "ކޮވިޑް-19 ގެ އައު ވެރިއެންޓަކަށް ރާއްޖެ ތައްޔާރުވަނީ",
        excerpt:
          "ކޮވިޑް-19 ގެ އައު ވެރިއެންޓެއް ފެތުރެމުންދާތީ، އެކަމަށް ތައްޔާރުވުމުގެ ގޮތުން ޞިއްޙީ ދާއިރާއިން ޚާއްޞަ ފިޔަވަޅުތަކެއް އަޅަމުންދެއެވެ.",
        content:
          "ކޮވިޑް-19 ގެ އައު ވެރިއެންޓެއް ފެތުރެމުންދާތީ، އެކަމަށް ތައްޔާރުވުމުގެ ގޮތުން ޞިއްޙީ ދާއިރާއިން ޚާއްޞަ ފިޔަވަޅުތަކެއް އަޅަމުންދެއެވެ. ހެލްތު މިނިސްޓްރީން ބުނާ ގޮތުގައި މިހާތަނަށް ރާއްޖޭގައި މި ވެރިއެންޓް ފެނިފައެއް ނުވެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?hospital",
        author: "ޑރ. މަރްޔަމް ޝާހިދާ",
        category_id: 5,
      },
      {
        title: "ދުންފަތުގެ އިސްތިޢުމާލު ކުރާ މީހުންގެ އަދަދު މަދުވަނީ",
        excerpt:
          "ފާއިތުވި 5 އަހަރު ތެރޭގައި ދިވެހިރާއްޖޭގައި ދުންފަތުގެ އިސްތިޢުމާލު ކުރާ މީހުންގެ އަދަދު 12 އިންސައްތަ ދަށަށް ގޮސްފައިވާ ކަމަށް ދިރާސާއަކުން ދައްކައިފިއެވެ.",
        content:
          "ފާއިތުވި 5 އަހަރު ތެރޭގައި ދިވެހިރާއްޖޭގައި ދުންފަތުގެ އިސްތިޢުމާލު ކުރާ މީހުންގެ އަދަދު 12 އިންސައްތަ ދަށަށް ގޮސްފައިވާ ކަމަށް ދިރާސާއަކުން ދައްކައިފިއެވެ. މިއީ ސަރުކާރުން ހިންގި ހޭލުންތެރިކުރުމުގެ ޕްރޮގްރާމްތަކުގެ ނަތީޖާއެއް ކަމަށް ބެލެވެއެވެ...",
        image_url: "https://source.unsplash.com/random/900×700/?health",
        author: "ޑރ. ޙަސަން މަނިކު",
        category_id: 5,
      },
    ];

    // Create articles
    console.log("\nCreating articles...");
    for (const article of articles) {
      const response = await fetch("http://localhost:5000/api/articles", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          title: article.title,
          excerpt: article.excerpt,
          content: article.content,
          image_url: article.image_url,
          author: article.author,
          category_id: article.category_id,
        }),
      });

      if (!response.ok) {
        const error = await response.text();
        console.error(`Failed to create article: ${error}`);
        continue;
      }

      const createdArticle = await response.json();
      console.log(`Created article: ${article.title.substring(0, 30)}...`);
    }

    console.log("\nTest data creation completed successfully!");
  } catch (error) {
    console.error("Error:", error);
  }
}

testAPI();
